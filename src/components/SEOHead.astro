---
export interface SEOProps {
  title: string;
  description: string;
  canonical?: string;
  image?: string;
  imageAlt?: string;
  type?: 'website' | 'article' | 'product' | 'software';
  publishedTime?: string;
  modifiedTime?: string;
  author?: string;
  tags?: string[];
  schema?: Record<string, any>;
  noindex?: boolean;
  nofollow?: boolean;
  locale?: string;
  alternateLanguages?: Array<{ hreflang: string; href: string }>;
  keywords?: string;
  category?: string;
}

const {
  title,
  description,
  canonical,
  image = '/images/og-default.jpg',
  imageAlt = 'Descarga Software Gratis - Programas Gratuitos y Open Source',
  type = 'website',
  publishedTime,
  modifiedTime,
  author,
  tags = [],
  keywords = 'software gratis, programas gratuitos, descargar software, open source, aplicaciones gratis, herramientas gratuitas',
  category,
  schema,
  noindex = false,
  nofollow = false,
  locale = 'es_ES',
  alternateLanguages = []
} = Astro.props as SEOProps;

const siteName = 'Descargar Software Gratis';
const siteUrl = 'https://software-gratis.com';
const fullTitle = title.includes(siteName) ? title : `${title} | ${siteName} - Programas Gratuitos`;
const fullCanonical = canonical || Astro.url.href;
const fullImageUrl = image.startsWith('http') ? image : `${siteUrl}${image}`;

// Generate breadcrumb schema
const generateBreadcrumbSchema = () => {
  const pathSegments = Astro.url.pathname.split('/').filter(Boolean);
  
  if (pathSegments.length === 0) return null;
  
  const breadcrumbs = [
    { name: 'Home', url: siteUrl }
  ];
  
  let currentPath = '';
  pathSegments.forEach((segment, index) => {
    currentPath += `/${segment}`;
    const name = segment.charAt(0).toUpperCase() + segment.slice(1).replace(/-/g, ' ');
    breadcrumbs.push({
      name,
      url: `${siteUrl}${currentPath}`
    });
  });
  
  return {
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    "itemListElement": breadcrumbs.map((crumb, index) => ({
      "@type": "ListItem",
      "position": index + 1,
      "name": crumb.name,
      "item": crumb.url
    }))
  };
};

// Generate software schema
const generateSoftwareSchema = () => {
  if (type !== 'software') return null;
  
  return {
    "@context": "https://schema.org",
    "@type": "SoftwareApplication",
    "name": title,
    "description": description,
    "url": fullCanonical,
    "image": fullImageUrl,
    "applicationCategory": "UtilitiesApplication",
    "operatingSystem": "Windows, macOS, Linux",
    "offers": {
      "@type": "Offer",
      "price": "0",
      "priceCurrency": "USD"
    },
    "aggregateRating": {
      "@type": "AggregateRating",
      "ratingValue": "4.5",
      "ratingCount": "100"
    }
  };
};

// Generate article schema
const generateArticleSchema = () => {
  if (type !== 'article') return null;
  
  return {
    "@context": "https://schema.org",
    "@type": "Article",
    "headline": title,
    "description": description,
    "image": fullImageUrl,
    "url": fullCanonical,
    "datePublished": publishedTime,
    "dateModified": modifiedTime || publishedTime,
    "author": {
      "@type": "Person",
      "name": author || "Opensoftware Team"
    },
    "publisher": {
      "@type": "Organization",
      "name": siteName,
      "logo": {
        "@type": "ImageObject",
        "url": `${siteUrl}/images/logo.png`
      }
    },
    "mainEntityOfPage": {
      "@type": "WebPage",
      "@id": fullCanonical
    }
  };
};

// Generate organization schema
const generateOrganizationSchema = () => {
  return {
    "@context": "https://schema.org",
    "@type": "Organization",
    "name": siteName,
    "url": siteUrl,
    "logo": `${siteUrl}/images/logo.png`,
    "description": "Free software repository with curated, safe, and reliable applications",
    "sameAs": [
      "https://github.com/opensoftware",
      "https://twitter.com/opensoftware"
    ],
    "contactPoint": {
      "@type": "ContactPoint",
      "contactType": "customer service",
      "email": "hello@opensoftware.com"
    }
  };
};

// Combine all schemas
const schemas = [
  generateOrganizationSchema(),
  generateBreadcrumbSchema(),
  generateSoftwareSchema(),
  generateArticleSchema(),
  schema
].filter(Boolean);

// Robots meta content
const robotsContent = () => {
  const directives = [];
  if (noindex) directives.push('noindex');
  if (nofollow) directives.push('nofollow');
  if (directives.length === 0) directives.push('index', 'follow');
  return directives.join(', ');
};
---

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />
<meta name="keywords" content={keywords} />
<meta name="robots" content={robotsContent()} />
<link rel="canonical" href={fullCanonical} />

<!-- Additional SEO Meta Tags -->
<meta name="author" content={author || "Software Gratis Team"} />
<meta name="publisher" content={siteName} />
<meta name="copyright" content={`Â© ${new Date().getFullYear()} ${siteName}`} />
<meta name="language" content="es" />
<meta name="revisit-after" content="3 days" />
<meta name="rating" content="general" />
<meta name="distribution" content="global" />
<meta name="theme-color" content="#3b82f6" />
<meta name="application-name" content={siteName} />
<meta name="mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="default" />
{category && <meta name="category" content={category} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={fullCanonical} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={fullImageUrl} />
<meta property="og:image:alt" content={imageAlt} />
<meta property="og:site_name" content={siteName} />
<meta property="og:locale" content={locale} />

{publishedTime && <meta property="article:published_time" content={publishedTime} />}
{modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
{author && <meta property="article:author" content={author} />}
{tags.map(tag => <meta property="article:tag" content={tag} />)}

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={fullCanonical} />
<meta property="twitter:title" content={fullTitle} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={fullImageUrl} />
<meta property="twitter:image:alt" content={imageAlt} />
<meta property="twitter:site" content="@software_gratis" />
<meta property="twitter:creator" content="@software_gratis" />

<!-- Software-specific SEO -->
<meta name="software:category" content={category || "Software Gratuito"} />
<meta name="software:platform" content="Windows, macOS, Linux" />
<meta name="software:license" content="Gratis" />
<meta name="software:downloadable" content="true" />

<!-- Keywords (if provided) -->
{tags.length > 0 && <meta name="keywords" content={`${tags.join(', ')}, ${keywords}`} />}

<!-- Geo Tags -->
<meta name="geo.region" content="US" />
<meta name="geo.placename" content="United States" />

<!-- Mobile Meta Tags -->
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="format-detection" content="telephone=no" />
<meta name="mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="default" />
<meta name="apple-mobile-web-app-title" content={siteName} />

<!-- Theme Color -->
<meta name="theme-color" content="#2563eb" />
<meta name="msapplication-TileColor" content="#2563eb" />
<meta name="msapplication-navbutton-color" content="#2563eb" />
<meta name="apple-mobile-web-app-status-bar-style" content="default" />

<!-- Preconnect to external domains -->
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

<!-- DNS Prefetch -->
<link rel="dns-prefetch" href="https://api.opensoftware.com" />

<!-- Alternate Languages -->
{alternateLanguages.map(alt => 
  <link rel="alternate" hreflang={alt.hreflang} href={alt.href} />
)}

<!-- Structured Data -->
{schemas.map(schemaData => 
  <script type="application/ld+json" set:html={JSON.stringify(schemaData)} />
)}

<!-- Security Headers -->
<meta http-equiv="X-Content-Type-Options" content="nosniff" />
<meta http-equiv="X-Frame-Options" content="DENY" />
<meta http-equiv="X-XSS-Protection" content="1; mode=block" />
<meta http-equiv="Referrer-Policy" content="strict-origin-when-cross-origin" />

<!-- Performance Hints -->
<link rel="preload" href="/fonts/inter-var.woff2" as="font" type="font/woff2" crossorigin />

<!-- Feed Links -->
<link rel="alternate" type="application/rss+xml" title={`${siteName} RSS Feed`} href="/feed.xml" />
<link rel="alternate" type="application/atom+xml" title={`${siteName} Atom Feed`} href="/atom.xml" />

<!-- Favicon -->
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="manifest" href="/manifest.json" />

<!-- Microformats -->
<meta name="google-site-verification" content="your-google-verification-code" />
<meta name="msvalidate.01" content="your-bing-verification-code" />
<meta name="yandex-verification" content="your-yandex-verification-code" />

<!-- Webmaster Tools -->
<meta name="google" content="notranslate" />
<meta name="googlebot" content={robotsContent()} />
<meta name="bingbot" content={robotsContent()} />

<!-- Performance Metrics -->
<script>
  // Web Vitals tracking
  if ('PerformanceObserver' in window) {
    const observer = new PerformanceObserver((list) => {
      list.getEntries().forEach((entry) => {
        if (entry.entryType === 'largest-contentful-paint') {
          console.log('LCP:', entry.startTime);
        }
        if (entry.entryType === 'first-input') {
          console.log('FID detected:', entry.startTime);
        }
      });
    });
    
    try {
      observer.observe({ entryTypes: ['largest-contentful-paint', 'first-input'] });
    } catch (e) {
      // Fallback for older browsers
      console.log('Performance Observer not fully supported');
    }
  }
</script>
